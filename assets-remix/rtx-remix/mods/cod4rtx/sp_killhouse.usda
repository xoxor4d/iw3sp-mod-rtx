#usda 1.0
(
    upAxis = "Z"
)

over "RootNode"
{
    over "Looks"
    {
        over "mat_5F8B19392EE4D8D3"
        {
            over "Shader"
            {
                float inputs:subsurface_measurement_distance = 0
                float inputs:subsurface_volumetric_anisotropy = 0
            }
        }
    }

    over "meshes"
    {
        over "mesh_DF814C4358724561"
        {
            def SphereLight "SphereLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:colorTemperature = 4500
                bool inputs:enableColorTemperature = 1
                float inputs:intensity = 10
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-188.75215520245, -106.69531636378633, 134.49868093722782)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:colorTemperature = 4500
                bool inputs:enableColorTemperature = 1
                float inputs:intensity = 10
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-45.06776990118806, -106.69531636378315, 134.49868093722702)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_02" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:colorTemperature = 4500
                bool inputs:enableColorTemperature = 1
                float inputs:intensity = 10
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-334.6491165563343, -106.69531636377405, 134.2232312503391)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_03" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:colorTemperature = 4500
                bool inputs:enableColorTemperature = 1
                float inputs:exposure = 1
                float inputs:intensity = 10
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (186.91167866152045, -177.0317289391196, 117.06918951184926)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_04" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:colorTemperature = 4500
                bool inputs:enableColorTemperature = 1
                float inputs:exposure = 1
                float inputs:intensity = 10
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (283.1765216012568, -177.0317289391196, 117.06918951184991)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_05" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:colorTemperature = 4500
                bool inputs:enableColorTemperature = 1
                float inputs:exposure = 1
                float inputs:intensity = 10
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (383.10105711370807, -177.0317289391196, 117.06918951185068)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_06" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:colorTemperature = 4500
                bool inputs:enableColorTemperature = 1
                float inputs:exposure = 1
                float inputs:intensity = 10
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (487.03196530564674, -177.0317289391196, 117.06918951185148)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_07" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:colorTemperature = 4500
                bool inputs:enableColorTemperature = 1
                float inputs:exposure = 1
                float inputs:intensity = 10
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (591.2708144049607, -177.0317289391196, 117.06918951185204)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_08" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:colorTemperature = 4500
                bool inputs:enableColorTemperature = 1
                float inputs:exposure = 1
                float inputs:intensity = 10
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (693.6480179261266, -177.0317289391196, 117.06918951185276)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_09" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:colorTemperature = 4500
                bool inputs:enableColorTemperature = 1
                float inputs:exposure = 1
                float inputs:intensity = 10
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (790.1814648409481, -177.0317289391196, 117.0691895118535)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_10" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:colorTemperature = 4500
                bool inputs:enableColorTemperature = 1
                float inputs:exposure = 1
                float inputs:intensity = 10
                float inputs:radius = 4
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (772.3279382559476, 3.8217823540458085, 127.79813773248773)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_11" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:colorTemperature = 4500
                bool inputs:enableColorTemperature = 1
                float inputs:exposure = 1
                float inputs:intensity = 10
                float inputs:radius = 4
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (772.3279382559476, 275.1770382588019, 127.79813773248893)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_12" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:colorTemperature = 4500
                bool inputs:enableColorTemperature = 1
                float inputs:exposure = 1
                float inputs:intensity = 10
                float inputs:radius = 4
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (774.4903690913452, 542.0048632988559, 127.79813773249086)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_13" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:colorTemperature = 4500
                bool inputs:enableColorTemperature = 1
                float inputs:exposure = 1
                float inputs:intensity = 10
                float inputs:radius = 4
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (774.4903690913452, 797.8908362583028, 127.79813773249185)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_14" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:colorTemperature = 4500
                bool inputs:enableColorTemperature = 1
                float inputs:exposure = 1
                float inputs:intensity = 10
                float inputs:radius = 4
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (774.4903690913452, 1030.1878515683607, 127.79813773249262)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_15" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:colorTemperature = 4500
                bool inputs:enableColorTemperature = 1
                float inputs:exposure = 1
                float inputs:intensity = 10
                float inputs:radius = 4
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (78.44566592044475, 22.438249380697698, 127.63518522950582)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_16" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:colorTemperature = 4500
                bool inputs:enableColorTemperature = 1
                float inputs:exposure = 1
                float inputs:intensity = 10
                float inputs:radius = 4
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (78.44566592044475, 278.0746480001351, 127.63518522950613)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_17" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:colorTemperature = 4500
                bool inputs:enableColorTemperature = 1
                float inputs:exposure = 1
                float inputs:intensity = 10
                float inputs:radius = 4
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (78.44566592044475, 542.4542580248128, 127.63518522950702)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_18" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:colorTemperature = 4500
                bool inputs:enableColorTemperature = 1
                float inputs:exposure = 1
                float inputs:intensity = 10
                float inputs:radius = 4
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (78.44566592044475, 1031.2778339340362, 127.63518522950824)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_19" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0.99999, 0.99999)
                float inputs:colorTemperature = 5500
                bool inputs:enableColorTemperature = 1
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 108
                float inputs:shaping:cone:softness = 0.85
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (69.85545983470286, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (181.0280613458258, -89.95558517894756, 129.43195731420101)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_20" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0.99999, 0.99999)
                float inputs:colorTemperature = 5500
                bool inputs:enableColorTemperature = 1
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 108
                float inputs:shaping:cone:softness = 0.85
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (69.85545983470286, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (395.13947579810974, -89.95558517894756, 129.43195731420101)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_21" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0.99999, 0.99999)
                float inputs:colorTemperature = 5500
                bool inputs:enableColorTemperature = 1
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 108
                float inputs:shaping:cone:softness = 0.85
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (69.85545983470286, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (661.3776774278454, -89.95558517894756, 129.43195731420101)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_22" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:colorTemperature = 4500
                bool inputs:enableColorTemperature = 1
                float inputs:exposure = 2
                float inputs:intensity = 20
                float inputs:radius = 4
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-149.1954882694522, -51.47346159775816, 98.50953992519425)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def Xform "ref_09300c03fe384b3cb0235fc52149c0e1" (
                prepend references = @./assets/misc_models/lights/ch_industrial_lamp_wall/ch_industrial_lamp_wall.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 90)
                    float3 xformOp:scale = (0.003937008, 0.003937008, 0.003937008)
                    double3 xformOp:translate = (-149.08758207347046, -70.78973388671875, 112.27484987032949)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }
            }

            def Xform "ref_5863098940af4d55975af4b21b389a46" (
                prepend references = @./assets/misc_models/lights/ch_industrial_lamp_wall/ch_industrial_lamp_wall.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, -90)
                    float3 xformOp:scale = (0.003937008, 0.003937008, 0.003937008)
                    double3 xformOp:translate = (-288.8460714538419, 145.95198787048218, 97.40398745505988)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }
            }

            def Xform "ref_34f37a7085c24834b88adbfe1a4f8bdb" (
                prepend references = @./assets/misc_models/lights/ch_industrial_lamp_wall/ch_industrial_lamp_wall.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, -90)
                    float3 xformOp:scale = (0.003937008, 0.003937008, 0.003937008)
                    double3 xformOp:translate = (-199.20754999843894, 145.95198787048218, 97.4039874550594)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }
            }

            def Xform "ref_1ddedd5036224d27afa1ae3b44f463f6" (
                prepend references = @./assets/misc_models/lights/ch_industrial_lamp_wall/ch_industrial_lamp_wall.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, -90)
                    float3 xformOp:scale = (0.003937008, 0.003937008, 0.003937008)
                    double3 xformOp:translate = (-106.54344710574605, 145.95198787048218, 97.4039874550594)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }
            }

            def SphereLight "SphereLight_23" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:colorTemperature = 4500
                bool inputs:enableColorTemperature = 1
                float inputs:exposure = 2
                float inputs:intensity = 45
                float inputs:radius = 2
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-106.57641907407833, 126.99639170278283, 84.87142779197572)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_24" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:colorTemperature = 4500
                bool inputs:enableColorTemperature = 1
                float inputs:exposure = 2
                float inputs:intensity = 45
                float inputs:radius = 2
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-199.3468647231948, 126.99639170278283, 84.87142779197578)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_25" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:colorTemperature = 4500
                bool inputs:enableColorTemperature = 1
                float inputs:exposure = 2
                float inputs:intensity = 45
                float inputs:radius = 2
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-288.7499519317753, 126.99639170278283, 84.87142779197583)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def CylinderLight "CylinderLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:colorTemperature = 5000
                bool inputs:enableColorTemperature = 1
                float inputs:intensity = 10
                float inputs:length = 50
                float inputs:radius = 0.2
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (0, 90, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-133.7784008189974, -464.849730646406, 0.6360435843728212)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def CylinderLight "CylinderLight_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:colorTemperature = 5000
                bool inputs:enableColorTemperature = 1
                float inputs:intensity = 10
                float inputs:length = 50
                float inputs:radius = 0.2
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (0, 90, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-155.78339500691527, -464.849730646406, 0.6360435843728212)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def CylinderLight "CylinderLight_02" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:colorTemperature = 5000
                bool inputs:enableColorTemperature = 1
                float inputs:intensity = 10
                float inputs:length = 50
                float inputs:radius = 0.2
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (0, 90, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-201.23478063708671, -461.03848430491394, -5.938554064079241)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def CylinderLight "CylinderLight_03" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:colorTemperature = 5000
                bool inputs:enableColorTemperature = 1
                float inputs:intensity = 10
                float inputs:length = 50
                float inputs:radius = 0.2
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (0, 90, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-178.0697492269428, -461.03848430491394, -5.938554064080137)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def CylinderLight "CylinderLight_04" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (0.6610665, 0.93604666, 0.9459459)
                float inputs:colorTemperature = 5000
                bool inputs:enableColorTemperature = 1
                float inputs:intensity = 25
                float inputs:length = 20
                float inputs:radius = 0.5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-188.29947428475862, -462.7553828665766, 10.864097613052394)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def CylinderLight "CylinderLight_05" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (0.6610665, 0.93604666, 0.9459459)
                float inputs:colorTemperature = 5000
                bool inputs:enableColorTemperature = 1
                float inputs:intensity = 25
                float inputs:length = 20
                float inputs:radius = 0.5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-188.29947428475862, -462.7553828665766, 1.0130029948442285)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def CylinderLight "CylinderLight_06" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (0.6610665, 0.93604666, 0.9459459)
                float inputs:colorTemperature = 5000
                bool inputs:enableColorTemperature = 1
                float inputs:intensity = 25
                float inputs:length = 20
                float inputs:radius = 0.5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-188.29947428475862, -462.7553828665766, -23.487793653850595)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def CylinderLight "CylinderLight_07" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (0.6610665, 0.93604666, 0.9459459)
                float inputs:colorTemperature = 5000
                bool inputs:enableColorTemperature = 1
                float inputs:intensity = 20
                float inputs:length = 20
                float inputs:radius = 0.5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-145.60729784826844, -465.84597738260345, 22.57147935784839)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }
    }
}

