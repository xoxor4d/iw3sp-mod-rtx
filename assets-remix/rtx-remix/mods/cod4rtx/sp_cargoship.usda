#usda 1.0
(
    upAxis = "Z"
)

over "RootNode"
{
    over "Looks"
    {
        over "mat_2F67340F1004B28D"
        {
            over "Shader"
            {
                int inputs:alpha_test_type = 4 (
                    customData = {
                        int default = 0
                    }
                    displayGroup = "Alpha Blending"
                    displayName = "Alpha Test Type"
                    doc = """The alpha state alpha test type to use.
This parameter is unused.
"""
                    hidden = false
                    renderType = "AlphaTestType"
                    sdrMetadata = {
                        string __SDR__enum_value = "Always"
                        string options = "Always:0|Never:1|Less:2|Equal:3|LessOrEqual:4|Greater:5|NotEqual:6|GreaterOrEqual:7"
                    }
                )
                bool inputs:blend_enabled = 1 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Alpha Blending"
                    displayName = "Blend Enabled"
                    doc = """Indicates if alpha state blending should be enabled.

"""
                    hidden = false
                )
                bool inputs:use_legacy_alpha_state = 0 (
                    customData = {
                        bool default = 1
                    }
                    displayGroup = "Alpha Blending"
                    displayName = "Use Legacy Alpha State"
                    doc = """Indicates if the alpha state should be driven by the game itself, or overridden by this material.

"""
                    hidden = false
                )
            }
        }

        over "mat_3F1ECC51644ACD15"
        {
            over "Shader"
            {
                int inputs:alpha_test_type = 4 (
                    customData = {
                        int default = 0
                    }
                    displayGroup = "Alpha Blending"
                    displayName = "Alpha Test Type"
                    doc = """The alpha state alpha test type to use.
This parameter is unused.
"""
                    hidden = false
                    renderType = "AlphaTestType"
                    sdrMetadata = {
                        string __SDR__enum_value = "Always"
                        string options = "Always:0|Never:1|Less:2|Equal:3|LessOrEqual:4|Greater:5|NotEqual:6|GreaterOrEqual:7"
                    }
                )
                bool inputs:blend_enabled = 1 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Alpha Blending"
                    displayName = "Blend Enabled"
                    doc = """Indicates if alpha state blending should be enabled.

"""
                    hidden = false
                )
                int inputs:blend_type = 0 (
                    customData = {
                        int default = 0
                    }
                    displayGroup = "Alpha Blending"
                    displayName = "Blend Type"
                    doc = """The alpha state blend type to use.
This parameter is unused.
"""
                    hidden = false
                    renderType = "BlendType"
                    sdrMetadata = {
                        string __SDR__enum_value = "Alpha"
                        string options = "Alpha:0|AlphaEmissive:1|ReverseAlphaEmissive:2|Color:3|ColorEmissive:4|ReverseColorEmissive:5|Emissive:6|Multiplicative:7|DoubleMultiplicative:8"
                    }
                )
                float inputs:emissive_intensity = 0 (
                    customData = {
                        float default = 40
                        dictionary range = {
                            float max = 65504
                            float min = 0
                        }
                    }
                    displayGroup = "Emission"
                    displayName = "Emissive Intensity"
                    doc = """Intensity of the emission

"""
                    hidden = false
                )
                bool inputs:enable_emission = 1 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Emission"
                    displayName = "Enable Emission"
                    doc = """Enables the emission of light from the material

"""
                    hidden = false
                )
                float inputs:metallic_constant = 0 (
                    customData = {
                        float default = 0
                        dictionary range = {
                            float max = 1
                            float min = 0
                        }
                    }
                    displayGroup = "Base Material"
                    displayName = "Metallic Amount"
                    doc = """How metallic is this material, 0 for not at all, 1 for fully metallic. (Used if no texture is specified).

"""
                    hidden = false
                )
                bool inputs:use_legacy_alpha_state = 0 (
                    customData = {
                        bool default = 1
                    }
                    displayGroup = "Alpha Blending"
                    displayName = "Use Legacy Alpha State"
                    doc = """Indicates if the alpha state should be driven by the game itself, or overridden by this material.

"""
                    hidden = false
                )
            }
        }
    }

    over "meshes"
    {
        over "mesh_E4BB892BDD5B1FD9"
        {
        }

        over "mesh_5991ED6DA42E8B2B"
        {
            def SphereLight "SphereLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-569.9923159609016, -89.91549931720817, -109.7216982166114)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-706.5632146353305, -100.40838587175497, -109.72169821661026)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_02" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1.5
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-355.82862176352637, -27.125827529780622, -95.19318502870948)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_03" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-264.20777711627375, 26.345272069931184, -98.01835454099432)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_04" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-264.2077771162435, -350.81431634374, -124.36712058796599)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_05" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-427.58595978129665, -350.81431634374, -124.36712058796297)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_06" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-556.963328347782, -228.85639345893344, -124.36712058796024)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_07" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-556.963328347782, -370.53378408462174, -124.3671205879586)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_08" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-298.24982543144074, -526.8650656855151, -77.77069586202202)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_09" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-66.29993791320135, -526.8650656855151, -77.77069586202288)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_10" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (310.3243928342563, -592.3868756183911, -77.770695862026)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_11" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (272.1101288104205, -34.39736651753401, -77.77069586203373)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_12" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (388.1703019831955, -34.39736651753401, -77.77069586203532)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_13" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (559.2213156289671, -87.41454467094064, -77.77069586203982)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_14" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (733.2643923174595, -87.41454467094275, -77.77069586204402)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_15" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-71.58437454229465, -364.15718561423705, -124.49777797786777)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_16" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (244.1492173703391, -364.15718561423705, -124.49777797786334)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_17" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (275.468629296824, -276.21017676504664, -124.49777797785964)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_18" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (89.65754452497345, -367.10151872502405, -124.49777797785703)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_19" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-563.9890406005059, -526.8650656855151, -77.77069586202254)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_20" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-690.5128321111192, -540.5072717731208, -77.7706958620252)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_21" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-625.0220161612006, 41.88455719345188, -91.15942658386172)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_A413F020A5C012A4"
        {
            def SphereLight "SphereLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-542.2293701171875, 271.7916016413697, -142.22764107980112)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-357.478537175858, 171.0284408980343, -141.86149568853705)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_02" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-217.52713078565517, 219.9043150069097, -146.66839122613607)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_03" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-34.039199462030325, 336.4698909670195, -146.6683912261406)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_04" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (111.94618799058861, 201.78872070297658, -146.66839122614817)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_05" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-30.27434180117885, 210.8017783574814, -146.66839122615073)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_06" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-224.5763661958629, -26.375650074907742, -195.9036800785849)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_07" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-360.8841125964426, -26.375650074907742, -195.9036800785849)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_08" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-556.910015465081, 74.03856085878002, -195.9036800785849)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_09" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-681.3245084332391, -58.171419816614076, -195.9036800785849)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_10" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-700.4117470099047, -276.22425295486227, -177.65346679255282)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_11" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-574.6397996162602, -326.79213703148577, -139.00925137146243)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_12" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-347.78840900040166, -327.1998615477952, -139.00925137146442)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_13" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-221.94837496838312, -327.1998615477961, -139.00925137146533)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_14" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-26.18564851375632, -305.6943564461724, -139.00925137146913)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_15" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (337.1552639450704, -310.56922851324487, -139.00925137147186)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_16" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (422.0213779588023, -268.4800575092388, -139.00925137147823)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_17" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (591.2807327167548, -342.56466884847663, -139.00925137148494)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_18" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (732.0363484143363, -290.634106334988, -139.00925137148664)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_19" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (732.0363484143297, 200.52396318805006, -139.00925137148994)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_20" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (606.9673198693331, 203.22785646635575, -138.3227746618996)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_21" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (411.7555700854888, 327.5120963008715, -138.322774661903)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_22" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (411.7555700854924, -77.77951651978492, -205.07691415797814)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_23" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (323.88395851751784, 13.949523162340817, -205.0769141579762)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_24" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-54.54247884951704, -11.870944520278801, -195.9036800785849)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_3569B3CD8695AAE9"
        {
            def SphereLight "SphereLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (50.8233921299734, 131.1718544942654, -87.96383133162209)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-89.19490879981595, 131.1718544942654, -87.96383133162209)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_02" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-344.1949087998155, 26.17185449426541, -87.96383133162209)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_03" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-260.1949087998146, 191.1718544942654, -84.96383133162209)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_04" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-402.19490879981436, 191.1718544942654, -84.96383133162209)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_05" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-589.1949087998139, 188.1718544942654, -84.96383133162209)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_06" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-589.1949087998134, -6.828145505734611, -84.96383133162209)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_07" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-710.1949087998134, -137.8281455057348, -37.963831331622316)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_08" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-655.1949087998132, -276.8281455057349, -37.96383133162237)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_09" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-389.19490879981277, -256.8281455057349, -37.96383133162249)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_10" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-256.194908799813, -256.8281455057349, -37.96383133162254)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_11" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-83.19490879981299, -248.82814550573488, -37.96383133162266)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_12" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (62.80509120018655, -226.82814550573494, -37.96383133162277)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_13" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (85.80509120018655, -123.828145505735, -37.963831331622885)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_14" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (225.80509120018633, -124.828145505735, -37.963831331623)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_15" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (310.8050912001863, -213.82814550573505, -37.963831331623055)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_16" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (558.8050912001872, -268.82814550573516, -37.96383133162317)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_17" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (681.8050912001877, -268.8281455057352, -37.963831331623226)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_18" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (642.805091200189, -143.8281455057352, -37.963831331623396)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_19" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (532.8050912001895, -116.8281455057352, -37.96383133162345)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_20" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (386.8050912001895, 443.1718544942649, -33.96383133162357)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_21" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (224.8050912001895, 443.17185449426495, -33.963831331623624)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_22" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (288.8050912001895, 320.17185449426495, -33.96383133162374)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_23" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (540.8050912001909, 366.17185449426495, -33.96383133162391)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_24" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (689.8050912001913, 366.17185449426495, -33.963831331623965)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_25" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-5.1949087998089, 406.171854494265, -33.96383133162408)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_26" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-110.1949087998089, 288.17185449426506, -33.96383133162419)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_27" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-281.1949087998091, 355.17185449426506, -33.96383133162425)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_28" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-415.1949087998089, 355.17185449426506, -33.963831331624306)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_29" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-586.1949087998084, 290.17185449426506, -33.96383133162442)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_30" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-657.1949087998082, 392.1718544942651, -33.963831331624476)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_31" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (294.8233921299734, 198.1718544942654, -87.96383133162209)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_32" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (305.8233921299734, 59.1718544942654, -87.96383133162209)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_33" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:exposure = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (605.8233921299743, 51.171854494265396, -87.96383133162209)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }
    }
}

